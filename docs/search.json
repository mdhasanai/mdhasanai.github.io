[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Finley Malloc",
    "section": "",
    "text": "Finley Malloc is the Chief Data Scientist at Wengo Analytics. When not innovating on data platforms, Finley enjoys spending time unicycling and playing with her pet iguana.\n\n\nUniversity of California, San Diego | San Diego, CA PhD in Mathematics | Sept 2011 - June 2015\nMacalester College | St. Paul MA B.A in Economics | Sept 2007 - June 2011\n\n\n\nWengo Analytics | Head Data Scientist | April 2018 - present\nGeoScynce | Chief Analyst | Sept 2012 - April 2018\n\n \n  \n   \n  \n    \n     twitter\n  \n  \n    \n     Github"
  },
  {
    "objectID": "about.html#education",
    "href": "about.html#education",
    "title": "Finley Malloc",
    "section": "",
    "text": "University of California, San Diego | San Diego, CA PhD in Mathematics | Sept 2011 - June 2015\nMacalester College | St. Paul MA B.A in Economics | Sept 2007 - June 2011"
  },
  {
    "objectID": "about.html#experience",
    "href": "about.html#experience",
    "title": "Finley Malloc",
    "section": "",
    "text": "Wengo Analytics | Head Data Scientist | April 2018 - present\nGeoScynce | Chief Analyst | Sept 2012 - April 2018"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Md Hasan",
    "section": "",
    "text": "LinkedIn\n  \n  \n    \n     Twitter\n  \n  \n    \n     Github\n  \n  \n    \n     Email\n  \n\n  \n  \n\n\nI am Md Hasan, a Data Scientist deeply passionate about Generative AI (GenAI), Large Language Models (LLMs), Computer Vision, and MLOps.\nCurrently, I am pursuing my MSc in Artificial Intelligence at Friedrich-Alexander University Erlangen-Nuremberg (FAU), Nürnberg, Germany. I am also pursuing my Master’s thesis on A multimodal approach for automatic generation of radiology reports using chest X-ray images by FAU research funding, which combines my interests in AI and healthcare applications.\nAlongside my academic pursuits, I am employed as a Data Scientist (working student) at Innomotics GmbH, a Siemens business, where I focus on developing advanced RAG applications using LLMs. Prior to this, I worked as a Data Analytics (working student) at BMW Group, where I developed ETL workflows, predictive analysis models, and data-driven solutions to improve internal business processes.\nYou can learn more about my work and projects on my Publications & Projects page, or feel free to reach out to me via contact information."
  },
  {

    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "Md Hasan",
    "section": "Education",
    "text": "Education\n\nMaster of Science in Artificial Intelligence | [2022 – Current]\nFriedrich-Alexander University Erlangen-Nuremberg\nAddress: 91058, Erlangen, Germany\n\n\nBachelor of Science in Computer Science and Engineering | [2016 – 2020]\nNorth South University\nThesis: BanglaKotha: Bangla Automatic Speech Recognition Leveraging RNN-T."
  },
  {
    "objectID": "projects/ev_pattern/index.html",
    "href": "projects/ev_pattern/index.html",
    "title": "Electric Vehicle Charging Patterns and Infrastructure Analysis in Germany",
    "section": "",
    "text": "In this data science project, I have analyzed the availability and usage patterns of electric vehicle (EV) charging facilities in Germany as part of my course project. By leveraging Python for data manipulation, SQL for database management, and machine learning techniques for predictive analysis. This project offers deep insights into the current state of EV charging infrastructure. The analysis is powered by various libraries, including Pandas for data wrangling, Plotly for interactive visualizations, Seaborn and Matplotlib for exploratory data analysis (EDA), and SQLAlchemy for database interactions."
  },
  {
    "objectID": "projects/ev_pattern/index.html#key-technologies-and-methodologies-used",
    "href": "projects/ev_pattern/index.html#key-technologies-and-methodologies-used",
    "title": "Electric Vehicle Charging Patterns and Infrastructure Analysis in Germany",
    "section": "Key technologies and methodologies used:",
    "text": "Key technologies and methodologies used:\n\nPython: As the primary programming language, Python scripts handle data loading, cleaning, and preprocessing, ensuring smooth integration between different stages of analysis.\nELT Pipeline: The project explores the implementation of an Extract, Load, Transform (ELT) pipeline to efficiently process and load large datasets into a database, followed by transformations and analysis.\nSQL: Datasets are stored and queried using SQLite to facilitate seamless data retrieval and manipulation, especially when handling large-scale datasets.\nMachine Learning: Advanced machine learning algorithms are used to explore potential predictive patterns and offer recommendations for optimizing EV infrastructure placement.\nData Visualization: Plotly and Seaborn are employed to generate interactive charts and graphs, displaying trends such as regional disparities, usage patterns, and variations in power capacity across different types of charging stations.\nExploratory Data Analysis (EDA): Libraries like Matplotlib help reveal insights from data distributions, correlation matrices, and heatmaps, leading to an informed understanding of the EV landscape in Germany.\nSQLAlchemy: This powerful toolkit aids in connecting to databases and executing SQL queries for efficient data extraction and analysis."
  },
  {
    "objectID": "projects/ev_pattern/index.html#project-objectives",
    "href": "projects/ev_pattern/index.html#project-objectives",
    "title": "Electric Vehicle Charging Patterns and Infrastructure Analysis in Germany",
    "section": "Project objectives:",
    "text": "Project objectives:\n\nDistribution and Usage Patterns: Understand how the EV charging stations are distributed across Germany and identify usage trends based on location and type of charging facility.\nVariations in Charging Capacity: Analyze how power capacity and the number of charging points vary across different types of stations.\nRegional Disparities: Identify regions with the highest and lowest concentrations of EV charging stations, providing data-driven insights for future infrastructure expansion.\nELT Pipeline Implementation: Demonstrate the implementation of an efficient data pipeline, managing data ingestion from multiple sources, cleaning, and transforming it to provide actionable insights.\nRecommendations for Expansion: Use statistical findings to propose strategic expansions of the charging network in underserved areas.\n\nThe project emphasizes the need for a well-distributed and efficient charging network to support the growing number of electric vehicles in Germany, and it stresses the importance of continuous monitoring and updates to adapt to the dynamic EV landscape.\nYou can view the full project and source code on GitHub: Electric Vehicle Charging Patterns in Germany"
  },
  {
    "objectID": "projects/face_detector/index.html",
    "href": "projects/face_detector/index.html",
    "title": "Face-Detector with Landmark",
    "section": "",
=======
    "objectID": "projects/ev_pattern/index.html",
    "href": "projects/ev_pattern/index.html",
    "title": "Electric Vehicle Charging Patterns and Infrastructure Analysis in Germany",
    "section": "",
    "text": "In this data science project, I have analyzed the availability and usage patterns of electric vehicle (EV) charging facilities in Germany as part of my course project. By leveraging Python for data manipulation, SQL for database management, and machine learning techniques for predictive analysis. This project offers deep insights into the current state of EV charging infrastructure. The analysis is powered by various libraries, including Pandas for data wrangling, Plotly for interactive visualizations, Seaborn and Matplotlib for exploratory data analysis (EDA), and SQLAlchemy for database interactions."
  },
  {
    "objectID": "projects/ev_pattern/index.html#key-technologies-and-methodologies-used",
    "href": "projects/ev_pattern/index.html#key-technologies-and-methodologies-used",
    "title": "Electric Vehicle Charging Patterns and Infrastructure Analysis in Germany",
    "section": "Key technologies and methodologies used:",
    "text": "Key technologies and methodologies used:\n\nPython: As the primary programming language, Python scripts handle data loading, cleaning, and preprocessing, ensuring smooth integration between different stages of analysis.\nELT Pipeline: The project explores the implementation of an Extract, Load, Transform (ELT) pipeline to efficiently process and load large datasets into a database, followed by transformations and analysis.\nSQL: Datasets are stored and queried using SQLite to facilitate seamless data retrieval and manipulation, especially when handling large-scale datasets.\nMachine Learning: Advanced machine learning algorithms are used to explore potential predictive patterns and offer recommendations for optimizing EV infrastructure placement.\nData Visualization: Plotly and Seaborn are employed to generate interactive charts and graphs, displaying trends such as regional disparities, usage patterns, and variations in power capacity across different types of charging stations.\nExploratory Data Analysis (EDA): Libraries like Matplotlib help reveal insights from data distributions, correlation matrices, and heatmaps, leading to an informed understanding of the EV landscape in Germany.\nSQLAlchemy: This powerful toolkit aids in connecting to databases and executing SQL queries for efficient data extraction and analysis."
  },
  {
    "objectID": "projects/ev_pattern/index.html#project-objectives",
    "href": "projects/ev_pattern/index.html#project-objectives",
    "title": "Electric Vehicle Charging Patterns and Infrastructure Analysis in Germany",
    "section": "Project objectives:",
    "text": "Project objectives:\n\nDistribution and Usage Patterns: Understand how the EV charging stations are distributed across Germany and identify usage trends based on location and type of charging facility.\nVariations in Charging Capacity: Analyze how power capacity and the number of charging points vary across different types of stations.\nRegional Disparities: Identify regions with the highest and lowest concentrations of EV charging stations, providing data-driven insights for future infrastructure expansion.\nELT Pipeline Implementation: Demonstrate the implementation of an efficient data pipeline, managing data ingestion from multiple sources, cleaning, and transforming it to provide actionable insights.\nRecommendations for Expansion: Use statistical findings to propose strategic expansions of the charging network in underserved areas.\n\nThe project emphasizes the need for a well-distributed and efficient charging network to support the growing number of electric vehicles in Germany, and it stresses the importance of continuous monitoring and updates to adapt to the dynamic EV landscape.\nYou can view the full project and source code on GitHub: Electric Vehicle Charging Patterns in Germany"

  },
  {
    "objectID": "projects/face_detector/index.html",
    "href": "projects/face_detector/index.html",
    "title": "Face-Detector with Landmark",
    "section": "",

    "text": "This project showcases a lightweight face detector with keypoint detection, designed for mobile deployment. The model is based on Retinaface-mobile0.25, converted into ncnn python, opencv onnx, and pytorch python, providing a slim, efficient face detector suitable for edge computing."
  },
  {
    "objectID": "projects/face_detector/index.html#key-features",
    "href": "projects/face_detector/index.html#key-features",
    "title": "Face-Detector with Landmark",
    "section": "Key Features:",
    "text": "Key Features:\n\nFace-Detector-1MB slim with 5 key points for face detection.\nRetinaface-mobile0.25 model converted into multiple formats: ncnn python, opencv onnx, pytorch.\nSupport for onnx export.\nNetwork parameter and FLOP calculation for performance optimization.\nModified anchor size of Retinaface-mobile0.25 to enhance suitability for mobile and edge devices.\nReimplementation of Face-Detector-1MB, adding key point detection and ncnn C++ deployment.\nEnhanced accuracy compared to original models, making it ideal for real-time applications."
  },
  {
    "objectID": "projects/face_detector/index.html#technologies-and-dependencies",
    "href": "projects/face_detector/index.html#technologies-and-dependencies",
    "title": "Face-Detector with Landmark",
    "section": "Technologies and Dependencies:",
    "text": "Technologies and Dependencies:\n\nUbuntu 18.04\nPython 3.7\nOpenCV\nNumPy"
  },
  {
    "objectID": "projects/face_detector/index.html#accuracy",
    "href": "projects/face_detector/index.html#accuracy",
    "title": "Face-Detector with Landmark",
    "section": "Accuracy:",
    "text": "Accuracy:\n\nWiderface Test (Single-scale Input Resolution: 320x240)\n\n\n\nMethod\nEasy\nMedium\nHard\n\n\n\n\nlibfacedetection v1 (caffe)\n0.65\n0.5\n0.233\n\n\nlibfacedetection v2 (caffe)\n0.714\n0.585\n0.306\n\n\nversion-slim (original)\n0.765\n0.662\n0.385\n\n\nversion-RFB (original)\n0.784\n0.688\n0.418\n\n\nversion-slim (our)\n0.795\n0.683\n0.345\n\n\nversion-RFB (our)\n0.814\n0.710\n0.363\n\n\nRetinaface-Mobilenet-0.25 (our)\n0.811\n0.697\n0.376\n\n\n\n\n\nWiderface Test (Single-scale Input Resolution: 640x480)\n\n\n\nMethod\nEasy\nMedium\nHard\n\n\n\n\nlibfacedetection v1 (caffe)\n0.741\n0.683\n0.421\n\n\nlibfacedetection v2 (caffe)\n0.773\n0.718\n0.485\n\n\nversion-slim (original)\n0.757\n0.721\n0.511\n\n\nversion-RFB (original)\n0.851\n0.81\n0.541\n\n\nversion-slim (our)\n0.850\n0.808\n0.595\n\n\nversion-RFB (our)\n0.865\n0.828\n0.622\n\n\nRetinaface-Mobilenet-0.25 (our)\n0.873\n0.836\n0.638\n\n\n\n\nNote: When testing, the long side is either 320 or 640, and the image is scaled in equal proportions."
  },
  {
    "objectID": "projects/face_detector/index.html#references",
    "href": "projects/face_detector/index.html#references",
    "title": "Face-Detector with Landmark",
    "section": "References:",
    "text": "References:\n\nFaceBoxes\nRetinaface (mxnet)\nRetinaface (pytorch)\nUltra-Light-Fast-Generic-Face-Detector-1MB\n\nYou can view the full project and source code on GitHub: Face-Detector with Landmark"

  },
  {
    "objectID": "contact.html",
    "href": "contact.html",
    "title": "Send me a note {{< fa feather-pointed >}}",
    "section": "",
    "text": "Send me a note {{&lt; fa feather-pointed &gt;}}\nYou can use this form to contact me about speaking engagements, collaborations, or simply to say hello.\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "resume.html",
    "href": "resume.html",
    "title": "Contact Information",
    "section": "",
    "text": "This is Resume\n\n\n\n\n Back to top"
  },
  {
    "objectID": "projects/speech_recognition/index.html",
    "href": "projects/speech_recognition/index.html",
    "title": "Bangla Speech Recognition",
    "section": "",
    "text": "This project implements a Sequence-to-Sequence (Seq2Seq) model for Bangla speech recognition using PyTorch. The project focuses on sequence-to-sequence tasks with utilities for data loading, preprocessing, training, and validation. This project aims to build an efficient speech recognition system for the Bangla language."
  },
  {
    "objectID": "projects/speech_recognition/index.html#key-features",
    "href": "projects/speech_recognition/index.html#key-features",
    "title": "Bangla Speech Recognition",
    "section": "Key Features:",
    "text": "Key Features:\n\nSeq2Seq Model: A sequence-to-sequence deep learning model is used to transcribe Bangla speech to text.\nPyTorch Implementation: The entire model is built using the PyTorch framework.\nData Loading & Preprocessing: The project includes utilities for loading, preprocessing, and preparing the speech dataset.\nTraining and Validation: Scripts are provided for training and validating the model."
  },
  {
    "objectID": "projects/speech_recognition/index.html#technologies-and-dependencies",
    "href": "projects/speech_recognition/index.html#technologies-and-dependencies",
    "title": "Bangla Speech Recognition",
    "section": "Technologies and Dependencies:",
    "text": "Technologies and Dependencies:\n\nPython 3.7\nPyTorch\nNumPy\nLibrosa: For audio processing.\n\nYou can view the full project and source code on GitHub: Bangla Speech Recognition"
  },
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "Projects",
    "section": "",
    "text": "Electric Vehicle Charging Patterns and Infrastructure Analysis in Germany\n\n\n\n\n\n\nMd Hasan\n\n\nSep 21, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFace-Detector with Landmark\n\n\n\n\n\n\nMd Hasan\n\n\nSep 22, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBangla Speech Recognition\n\n\n\n\n\n\nMd Hasan\n\n\nSep 23, 2020\n\n\n\n\n\n\n\n\nNo matching items\n\n Back to top"
  },
  {
    "objectID": "resume.html",
    "href": "resume.html",
    "title": "Contact Information",
    "section": "",
    "text": "This is Resume"
  },
  {

    "objectID": "projects/speech_recognition/index.html",
    "href": "projects/speech_recognition/index.html",
    "title": "Bangla Speech Recognition",
    "section": "",
    "text": "This project implements a Sequence-to-Sequence (Seq2Seq) model for Bangla speech recognition using PyTorch. The project focuses on sequence-to-sequence tasks with utilities for data loading, preprocessing, training, and validation. This project aims to build an efficient speech recognition system for the Bangla language."
  },
  {
    "objectID": "projects/speech_recognition/index.html#key-features",
    "href": "projects/speech_recognition/index.html#key-features",
    "title": "Bangla Speech Recognition",
    "section": "Key Features:",
    "text": "Key Features:\n\nSeq2Seq Model: A sequence-to-sequence deep learning model is used to transcribe Bangla speech to text.\nPyTorch Implementation: The entire model is built using the PyTorch framework.\nData Loading & Preprocessing: The project includes utilities for loading, preprocessing, and preparing the speech dataset.\nTraining and Validation: Scripts are provided for training and validating the model."
  },
  {
    "objectID": "projects/speech_recognition/index.html#technologies-and-dependencies",
    "href": "projects/speech_recognition/index.html#technologies-and-dependencies",
    "title": "Bangla Speech Recognition",
    "section": "Technologies and Dependencies:",
    "text": "Technologies and Dependencies:\n\nPython 3.7\nPyTorch\nNumPy\nLibrosa: For audio processing.\n\nYou can view the full project and source code on GitHub: Bangla Speech Recognition"
  },
  {

    "objectID": "projects.html",
    "href": "projects.html",
    "title": "Projects",
    "section": "",
    "text": "Electric Vehicle Charging Patterns and Infrastructure Analysis in Germany\n\n\n\n\n\n\nMd Hasan\n\n\nSep 21, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFace-Detector with Landmark\n\n\n\n\n\n\nMd Hasan\n\n\nSep 22, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBangla Speech Recognition\n\n\n\n\n\n\nMd Hasan\n\n\nSep 23, 2020\n\n\n\n\n\n\n\n\nNo matching items"

  },
  {
    "objectID": "publications.html",
    "href": "publications.html",
    "title": "Publications",
    "section": "",
    "text": "Here are some of my recent publications:"
  },
  {
    "objectID": "publications.html#mhasan-multi-head-angular-self-attention-network-for-spoof-detection",
    "href": "publications.html#mhasan-multi-head-angular-self-attention-network-for-spoof-detection",
    "title": "Publications",
    "section": "1. MHASAN: Multi-head Angular Self-Attention Network for Spoof Detection",
    "text": "1. MHASAN: Multi-head Angular Self-Attention Network for Spoof Detection\n\nMd Hasan, et al.\nPublished in [ICPR], 2022\nThis paper presents a novel multi-head angular self-attention network designed to improve spoof detection in biometric systems. The proposed method enhances feature extraction capabilities and achieves state-of-the-art performance in face anti-spoofing tasks. - Read the paper"
  },
  {
    "objectID": "publications.html#bi-fpnfas-bi-directional-feature-pyramid-network-for-pixel-wise-face-anti-spoofing-leveraging-fourier-spectra",
    "href": "publications.html#bi-fpnfas-bi-directional-feature-pyramid-network-for-pixel-wise-face-anti-spoofing-leveraging-fourier-spectra",
    "title": "Publications",
    "section": "2. Bi-FPNFAS: Bi-directional Feature Pyramid Network for Pixel-wise Face Anti-Spoofing Leveraging Fourier Spectra",
    "text": "2. Bi-FPNFAS: Bi-directional Feature Pyramid Network for Pixel-wise Face Anti-Spoofing Leveraging Fourier Spectra\n\nMd Hasan, et al.\nPublished in [Sensors], 2021\nThis work introduces a bi-directional feature pyramid network (Bi-FPN) that leverages Fourier spectra for pixel-wise face anti-spoofing. By focusing on both high- and low-level features, the network improves robustness against various spoofing attacks.\nRead the paper"
  },
  {
    "objectID": "publications.html#bangla-part-of-speech-tagging-using-contextual-embeddings-and-oversampling-techniques",
    "href": "publications.html#bangla-part-of-speech-tagging-using-contextual-embeddings-and-oversampling-techniques",
    "title": "Publications",
    "section": "3. Bangla Part of Speech Tagging Using Contextual Embeddings and Oversampling Techniques",
    "text": "3. Bangla Part of Speech Tagging Using Contextual Embeddings and Oversampling Techniques\n\nMd Hasan, et al.\nPublished in [FTC], 2021\nThis paper addresses the challenge of Bangla part-of-speech tagging using contextual embeddings and oversampling techniques to handle imbalanced data. The model significantly improves the accuracy of POS tagging for Bangla, a low-resource language.\nRead the paper\n\n\nFeel free to reach out for further details on my research and publications."
  }
]